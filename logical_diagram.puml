@startuml Logical Database Model

skinparam BackgroundColor transparent

skinparam HeaderFontColor #52FF69
skinparam HeaderFontSize 18

skinparam ArrowFontSize 15
skinparam ArrowColor D3374A
skinparam ArrowThickness 2
skinparam ArrowFontColor #3FD0C4

skinparam ClassBorderColor white
skinparam ClassBorderThickness 3
skinparam ClassAttributeFontSize 14
skinparam ClassAttributeFontColor FF6127
skinparam ClassBackgroundColor #283747
skinparam ClassFontSize 15
skinparam ClassFontStyle Bold
skinparam ClassFontColor #FFB623


header Logical Model

entity "Client" as Client {
  **client_id** : integer <<generated>>
  --
  *business_name : text
  *business_type : text
  *business_representative: text
  *phone_number: integer
  *email: text
  *zone: text
  *formal_address: text
  *geological_address: point
  *delivery_interval: text
  *delivery_days: text
}
note top
  delivery_interval 
  = {daily, weekly, twoPerWeek, biweekly}
end note

entity "Vehicle" as Vehicle {
    **vehicle_id**: number <<generated>>
    --
    *car_brand: text
    *car_plaque: text
    type_of_gas: text = 'premium'
    *purchase_date: date
    *tank_capacity: float
    *current_gasoline_amount: float
    last_gas_refill: date
    kilometers_traveled: float
}

entity "MaintenanceLog" as MaintenanceLog {
    **maintenance_id**: integer <<generated>>
     //vehicle_id//: <<FK: Vehicle.vehicle_id>> 
    --
    *maintenance_type: text
    *maintenenace_day: date = now()
}

entity "Driver" as Driver {
    **driver_id**: integer <<generated>>
    //vehicle_id//: <<FK: Vehicle.vehicle_id>>
    --
    *driver_name: text
    *driver_doc_id: integer
    *salary: integer
    *hiring_date: date = now()
}

entity "ClientOrder" as OrderC{
    **order_id**: integer <<generated>>
    //client_id//: <<FK Client.client_id>>
    --
    *status: text = 'pending'
}

entity "ClientOrderDetail" as OrderDetail {
    //order_id//: <<FK ClienteOrder.order_id>>
    //product_id//: <<FK Product.product_id>>
    --
    *quantity: integer
}

entity "Business Stock" as BusinessStock {
    **//product_id//**: <<FK: Product.product_id>>
    --
    *quantity: integer
}

entity "Supplier" as Supplier {
    **supplier_id**: integer <<generated>>
    --
    *supplier_name: text
    *formal_address: text
    *phone_number: integer
    *email: text
    *have_delivery: text {'Y', 'N'}
}

entity "Product" as Product {
    **product_id**: integer <<generated>>
    --
    *product_name: text
    *price: float
    category_name: text = "ND"
    subcategory_name: text = "ND"
    is_available: text {'Y', 'N'} = 'Y'
}

entity "SupplierStock" as SupplierStock {
    **supplier_stock_id**: integer <<generated>>
    //supplier_id//: <<FK: Supplier.supplier_id>>
    //product_id//: <<FK: Product.product_id>>
    --
}

entity "SupplierOrder" as SupplierOrder {
    **supplier_order_id**: integer <<generated>>
    //supplier_id//: <<FK: Supplier.supplier_id>>
    --
   *order_date: date = now()
}

entity "SupplierOrderDetail" as SupplierOrderDetail {
    //supplier_order_id//: <<FK: SupplierOrder.supplier_order_id>>
    //product_id//: <<FK: Product.product_id>>
    --
    *quantity: integer
}

Driver ||--|| Vehicle
Vehicle ||--o{ MaintenanceLog
Client ||--o{ OrderC
Product ||--o{ OrderC
OrderC ||--o{ OrderDetail
Supplier ||--o{ SupplierOrder
Supplier ||--o{ SupplierStock
Product ||--o{ SupplierStock
Product ||--o{ SupplierOrder
BusinessStock ||--o{ Product
SupplierOrder ||--o{  SupplierOrderDetail

@enduml
